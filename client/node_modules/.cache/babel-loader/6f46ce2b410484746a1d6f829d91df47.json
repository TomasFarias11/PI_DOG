{"ast":null,"code":"import axios from 'axios';\nexport function getDogs() {\n  return async function (dispatch) {\n    let dogs = await axios.get(\"http://localhost:3001/dogs\");\n    return dispatch({\n      type: 'GET_DOGS',\n      payload: dogs.data\n    });\n  };\n}\nexport function getDogsByName(name) {\n  return async function (dispatch) {\n    let dogsByName = await axios.get(`http://localhost:3001/dogs?name=${name}`);\n    return dispatch({\n      type: 'GET_DOGS_BY_NAME',\n      payload: dogsByName.data\n    });\n  };\n}\nexport function getDogById(id) {\n  return async function (dispatch) {\n    try {\n      let dogById = await axios.get(`http://localhost:3001/dogs/${id}`);\n      return dispatch({\n        type: 'GET_DOG_BY_ID',\n        payload: dogById.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\nexport function getTemperaments() {\n  return async function (dispatch) {\n    let temperaments = await axios.get(`http://localhost:3001/temperament`);\n    return dispatch({\n      type: 'GET_TEMPERAMENTS',\n      payload: temperaments.data\n    });\n  };\n}\nexport function postDog(payload) {\n  return function (dispatch) {\n    axios.post(`http://localhost:3001/dog`, payload).then(e => e).catch(err => {\n      console.log(err);\n    });\n  };\n}\nexport function sortDogsByWeight(payload) {\n  return {\n    type: 'SORT_BY_WEIGHT',\n    payload: payload\n  };\n}\nexport function sortDogsByLetter(payload) {\n  return {\n    type: 'SORT_BY_LETTER',\n    payload: payload\n  };\n}\nexport function filterByTemperaments(payload) {\n  return {\n    type: 'FILTER_BY_TEMPERAMENTS',\n    payload: payload\n  };\n}\nexport function filterCreated(payload) {\n  return {\n    type: 'FILTER_BY_CREATED',\n    payload: payload\n  };\n}","map":{"version":3,"sources":["/Users/tomasfarias/Desktop/SoyHenry/SecondPI/PI-Dogs-main/client/src/actions/index.js"],"names":["axios","getDogs","dispatch","dogs","get","type","payload","data","getDogsByName","name","dogsByName","getDogById","id","dogById","err","console","log","getTemperaments","temperaments","postDog","post","then","e","catch","sortDogsByWeight","sortDogsByLetter","filterByTemperaments","filterCreated"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,OAAT,GAAoB;AACvB,SAAO,gBAAgBC,QAAhB,EAA0B;AAC7B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,4BAAV,CAAjB;AACA,WAAOF,QAAQ,CAAC;AACZG,MAAAA,IAAI,EAAE,UADM;AAEZC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFF,KAAD,CAAf;AAIH,GAND;AAOH;AAED,OAAO,SAASC,aAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO,gBAAgBP,QAAhB,EAA0B;AAC7B,QAAIQ,UAAU,GAAG,MAAMV,KAAK,CAACI,GAAN,CAAW,mCAAkCK,IAAK,EAAlD,CAAvB;AACA,WAAOP,QAAQ,CAAC;AACZG,MAAAA,IAAI,EAAE,kBADM;AAEZC,MAAAA,OAAO,EAAEI,UAAU,CAACH;AAFR,KAAD,CAAf;AAIH,GAND;AAOH;AAED,OAAO,SAASI,UAAT,CAAqBC,EAArB,EAAyB;AAC5B,SAAO,gBAAgBV,QAAhB,EAA0B;AAC7B,QAAI;AACA,UAAIW,OAAO,GAAG,MAAMb,KAAK,CAACI,GAAN,CAAW,8BAA6BQ,EAAG,EAA3C,CAApB;AACA,aAAOV,QAAQ,CAAC;AACZG,QAAAA,IAAI,EAAE,eADM;AAEZC,QAAAA,OAAO,EAAEO,OAAO,CAACN;AAFL,OAAD,CAAf;AAIH,KAND,CAOA,OAAOO,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAXD;AAYH;AAED,OAAO,SAASG,eAAT,GAA4B;AAC/B,SAAO,gBAAgBf,QAAhB,EAA0B;AAC7B,QAAIgB,YAAY,GAAG,MAAMlB,KAAK,CAACI,GAAN,CAAW,mCAAX,CAAzB;AACA,WAAOF,QAAQ,CAAC;AACZG,MAAAA,IAAI,EAAE,kBADM;AAEZC,MAAAA,OAAO,EAAEY,YAAY,CAACX;AAFV,KAAD,CAAf;AAIH,GAND;AAQH;AAED,OAAO,SAASY,OAAT,CAAkBb,OAAlB,EAA2B;AAC9B,SAAO,UAAUJ,QAAV,EAAoB;AACvBF,IAAAA,KAAK,CAACoB,IAAN,CAAY,2BAAZ,EAAwCd,OAAxC,EACKe,IADL,CACWC,CAAD,IAAOA,CADjB,EAEKC,KAFL,CAEYT,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAJL;AAKH,GAND;AAOH;AAED,OAAO,SAASU,gBAAT,CAA0BlB,OAA1B,EAAmC;AACtC,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH;AAED,OAAO,SAASmB,gBAAT,CAA0BnB,OAA1B,EAAmC;AACtC,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH;AAED,OAAO,SAASoB,oBAAT,CAA8BpB,OAA9B,EAAuC;AAC1C,SAAO;AACHD,IAAAA,IAAI,EAAE,wBADH;AAEHC,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH;AAED,OAAO,SAASqB,aAAT,CAAwBrB,OAAxB,EAAiC;AACpC,SAAO;AACHD,IAAAA,IAAI,EAAE,mBADH;AAEHC,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH","sourcesContent":["import axios from 'axios';\n\nexport function getDogs () {\n    return async function (dispatch) {\n        let dogs = await axios.get(\"http://localhost:3001/dogs\")\n        return dispatch({\n            type: 'GET_DOGS',\n            payload: dogs.data\n        })\n    }\n}\n\nexport function getDogsByName (name) {\n    return async function (dispatch) {\n        let dogsByName = await axios.get(`http://localhost:3001/dogs?name=${name}`)\n        return dispatch({\n            type: 'GET_DOGS_BY_NAME',\n            payload: dogsByName.data\n        })\n    }\n}\n\nexport function getDogById (id) {\n    return async function (dispatch) {\n        try {\n            let dogById = await axios.get(`http://localhost:3001/dogs/${id}`)\n            return dispatch({\n                type: 'GET_DOG_BY_ID',\n                payload: dogById.data\n            })\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n}\n\nexport function getTemperaments () {\n    return async function (dispatch) {\n        let temperaments = await axios.get(`http://localhost:3001/temperament`)\n        return dispatch({\n            type: 'GET_TEMPERAMENTS',\n            payload: temperaments.data\n        })\n    }\n\n}\n\nexport function postDog (payload) {\n    return function (dispatch) {\n        axios.post(`http://localhost:3001/dog`, payload)\n            .then((e) => e)\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n}\n\nexport function sortDogsByWeight(payload) {\n    return {\n        type: 'SORT_BY_WEIGHT',\n        payload: payload\n    }\n}\n\nexport function sortDogsByLetter(payload) {\n    return {\n        type: 'SORT_BY_LETTER',\n        payload: payload\n    }\n}\n\nexport function filterByTemperaments(payload) {\n    return {\n        type: 'FILTER_BY_TEMPERAMENTS',\n        payload: payload\n    }\n}\n\nexport function filterCreated (payload) {\n    return {\n        type: 'FILTER_BY_CREATED',\n        payload: payload\n    }\n}"]},"metadata":{},"sourceType":"module"}