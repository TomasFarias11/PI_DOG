{"ast":null,"code":"const initialState = {\n  dogs: [],\n  allDogs: [],\n  dogsById: {},\n  temperaments: []\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'GET_DOGS':\n      state = initialState;\n      return { ...state,\n        dogs: state.dogs.concat(action.payload),\n        allDogs: state.allDogs.concat(action.payload)\n      };\n\n    case 'GET_DOGS_BY_NAME':\n      return { ...state,\n        dogs: action.payload\n      };\n\n    case 'GET_DOG_BY_ID':\n      return { ...state,\n        dogsById: action.payload\n      };\n\n    case 'GET_TEMPERAMENTS':\n      return { ...state,\n        temperaments: state.temperaments.concat(action.payload.data)\n      };\n\n    case 'SORT_BY_WEIGHT':\n      const sortWeight = action.payload === 'None' ? state.dogs : action.payload === 'Asc' ? state.dogs.sort(function (a, b) {\n        if (a.weight.split(' -')[0] === 'up') {\n          a.weight = a.weight.split('-')[1];\n\n          if (parseInt(a.weight) > parseInt(b.weight)) {\n            return 1;\n          }\n\n          if (parseInt(b.weight) > parseInt(a.weight)) {\n            return -1;\n          }\n\n          return 0;\n        } else if (b.weight.split(' -')[0] === 'up') {\n          b.weight = b.weight.split('-')[1];\n\n          if (parseInt(a.weight) > parseInt(b.weight)) {\n            return 1;\n          }\n\n          if (parseInt(b.weight) > parseInt(a.weight)) {\n            return -1;\n          }\n\n          return 0;\n        } else {\n          if (parseInt(a.weight) > parseInt(b.weight)) {\n            return 1;\n          }\n\n          if (parseInt(b.weight) > parseInt(a.weight)) {\n            return -1;\n          }\n\n          return 0;\n        }\n      }) : state.dogs.sort(function (a, b) {\n        if (a.weight.split(' -')[0] === 'up') {\n          a.weight = a.weight.split('-')[1];\n\n          if (parseInt(a.weight) > parseInt(b.weight)) {\n            return -1;\n          }\n\n          if (parseInt(b.weight) > parseInt(a.weight)) {\n            return 1;\n          }\n\n          return 0;\n        } else if (b.weight.split(' -')[0] === 'up') {\n          b.weight = b.weight.split('-')[1];\n\n          if (parseInt(a.weight) > parseInt(b.weight)) {\n            return -1;\n          }\n\n          if (parseInt(b.weight) > parseInt(a.weight)) {\n            return 1;\n          }\n\n          return 0;\n        } else {\n          if (parseInt(a.weight) > parseInt(b.weight)) {\n            return -1;\n          }\n\n          if (parseInt(b.weight) > parseInt(a.weight)) {\n            return 1;\n          }\n        }\n      });\n      state.dogs = [];\n      return { ...state,\n        dogs: state.dogs.concat(sortWeight)\n      };\n\n    case 'SORT_BY_LETTER':\n      const sortLetter = action.payload === 'None' ? state.dogs : action.payload === 'Asc' ? state.dogs.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.dogs.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      state.dogs = [];\n      return { ...state,\n        dogs: state.dogs.concat(sortLetter)\n      };\n\n    case 'FILTER_BY_CREATED':\n      const allDogs2 = state.allDogs;\n      const created = action.payload === 'Cre' ? allDogs2.filter(e => e.createdInDb) : state.dogs.filter(e => !e.createdInDb);\n      return { ...state,\n        dogs: action.payload === 'All' ? state.allDogs : created\n      };\n\n    case 'FILTER_BY_TEMPERAMENTS':\n      const allDogs = state.allDogs;\n      let filterOfTemperaments = [];\n\n      for (let i = 0; i < allDogs.length; i++) {\n        if (allDogs[i].temperaments && allDogs[i].temperaments.includes(action.payload.charAt(0).toUpperCase() + action.payload.slice(1))) {\n          filterOfTemperaments.push(allDogs[i]);\n        } else continue;\n      }\n\n      if (filterOfTemperaments.length === 0) state.dogs = state.allDogs;else state.dogs.length = 0;\n      return { ...state,\n        dogs: state.dogs.concat(filterOfTemperaments)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/tomasfarias/Desktop/SoyHenry/SecondPI/PI-Dogs-main/client/src/reducer/index.js"],"names":["initialState","dogs","allDogs","dogsById","temperaments","rootReducer","state","action","type","concat","payload","data","sortWeight","sort","a","b","weight","split","parseInt","sortLetter","name","allDogs2","created","filter","e","createdInDb","filterOfTemperaments","i","length","includes","charAt","toUpperCase","slice","push"],"mappings":"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","sourcesContent":["const initialState = {\n    dogs: [],\n    allDogs: [],\n    dogsById: {},\n    temperaments: [],\n}\n\nfunction rootReducer (state = initialState, action) {\n    switch(action.type) {\n        case 'GET_DOGS':\n            state = initialState\n            return {\n                ...state,\n                dogs: state.dogs.concat(action.payload),\n                allDogs: state.allDogs.concat(action.payload)\n            }\n\n        case 'GET_DOGS_BY_NAME':\n            return {\n                ...state,\n                dogs: action.payload\n            }\n\n        case 'GET_DOG_BY_ID':\n            return {\n                ...state,\n                dogsById: action.payload\n            }\n\n        case 'GET_TEMPERAMENTS':\n            return {\n                ...state,\n                temperaments: state.temperaments.concat(action.payload.data)\n            }\n        \n        case 'SORT_BY_WEIGHT':\n\n            const sortWeight = action.payload === 'None' ? state.dogs : action.payload === 'Asc' ? state.dogs.sort(function (a,b) {\n                if (a.weight.split(' -')[0] === 'up') {\n                    a.weight = a.weight.split('-')[1];\n                    if (parseInt(a.weight) > parseInt(b.weight)) {\n                        return 1;\n                    }\n                    if (parseInt(b.weight) > parseInt(a.weight)) {\n                        return -1;\n                    }\n                    return 0;\n                } else if (b.weight.split(' -')[0] === 'up') {\n                    b.weight = b.weight.split('-')[1];\n                    if (parseInt(a.weight) > parseInt(b.weight)) {\n                        return 1;\n                    }\n                    if (parseInt(b.weight) > parseInt(a.weight)) {\n                        return -1;\n                    }\n                    return 0;\n                } else {\n                    if (parseInt(a.weight) > parseInt(b.weight)) {\n                        return 1;\n                    }\n                    if (parseInt(b.weight) > parseInt(a.weight)) {\n                        return -1;\n                    }\n                    return 0;\n                }\n            })\n            :\n            state.dogs.sort(function (a,b) {\n                if (a.weight.split(' -')[0] === 'up') {\n                    a.weight = a.weight.split('-')[1]; \n                    if (parseInt(a.weight) > parseInt(b.weight)) {\n                        return -1;\n                    }\n                    if (parseInt(b.weight) > parseInt(a.weight)) {\n                        return 1;\n                    }\n                    return 0;\n                } else if (b.weight.split(' -')[0] === 'up') {\n                    b.weight = b.weight.split('-')[1];\n                    if (parseInt(a.weight) > parseInt(b.weight)) {\n                        return -1;\n                    }\n                    if (parseInt(b.weight) > parseInt(a.weight)) {\n                        return 1;\n                    }\n                    return 0;\n                } else {\n                    if (parseInt(a.weight) > parseInt(b.weight)) {\n                        return -1;\n                    }\n                    if (parseInt(b.weight) > parseInt(a.weight)) {\n                        return 1;\n                    }\n                }\n            });\n            state.dogs = [];\n            return {\n                ...state,\n                dogs: state.dogs.concat(sortWeight)\n            }\n\n        case 'SORT_BY_LETTER': \n            const sortLetter = action.payload === 'None' ? state.dogs : action.payload ===  'Asc' ? state.dogs.sort(function(a, b) {\n                if (a.name > b.name) {\n                    return 1;\n                }\n                if (b.name > a.name) {\n                    return -1;\n                }\n                return 0;\n            })\n            :\n            state.dogs.sort(function (a, b) {\n                if (a.name > b.name) {\n                    return -1;\n                }\n                if (b.name > a.name) {\n                    return 1;\n                }\n                return 0;\n            });\n            state.dogs = [];\n            return {\n                ...state,\n                dogs: state.dogs.concat(sortLetter)\n            }\n\n        case 'FILTER_BY_CREATED':\n            const allDogs2 = state.allDogs\n            const created = action.payload === 'Cre' ? allDogs2.filter(e => e.createdInDb) : state.dogs.filter(e => !e.createdInDb)\n            return {\n                ...state,\n                dogs: action.payload === 'All' ? state.allDogs : created\n            }\n        \n        case 'FILTER_BY_TEMPERAMENTS':\n            const allDogs = state.allDogs;\n            let filterOfTemperaments = [];\n                for (let i = 0; i < allDogs.length; i++) {\n                    if (allDogs[i].temperaments && allDogs[i].temperaments.includes((action.payload).charAt(0).toUpperCase() + (action.payload).slice(1))) {\n                        filterOfTemperaments.push(allDogs[i])\n                    } else\n                        continue;\n                }\n            if (filterOfTemperaments.length === 0) state.dogs = state.allDogs\n            else state.dogs.length = 0\n\n            return {\n                ...state,\n                dogs: state.dogs.concat(filterOfTemperaments)\n            }\n\n\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}